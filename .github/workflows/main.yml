name: Deployment
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      confirm:
        required: true
        description: "WARNING this triggers a production rollout"
  release:
    types:
      - created
    branches:
      - main
###
jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Read Version
        id: version
        run: |
          echo "Reading package.json"
          PACKAGE_VERSION=$(cat ./package.json | jq '.version' | tr -d '"')
          echo ::set-output name=value::$PACKAGE_VERSION-build.${{ github.run_id }}
      - name: Select Environment
        id: environment
        run: |
          COMMIT_MSG="$(git log -1 --pretty=%B)"
          echo $COMMIT_MSG
          if [[ "${{ github.event_name }}" == "push" ]]; then
              if [[  "$COMMIT_MSG" == *"_cron_"* ]]; then
                echo "::set-output name=value::cronjob"
              else
                echo "::set-output name=value::staging"
              fi
          fi
          if [[ "${{ github.event_name }}" == "release" ]]; then
               if [[  "$COMMIT_MSG" == *"_cron_"* ]]; then
                echo "::set-output name=value::prod_cron"
              else
                echo "::set-output name=value::production"
              fi
          fi
      - name: Check Environment
        run: |
          if [[ "${{ steps.environment.outputs.value }}" != "development" && "${{ steps.environment.outputs.value }}" != "staging" && "${{ steps.environment.outputs.value }}" != "production" && "${{ steps.environment.outputs.value }}" != "cronjob" && "${{ steps.environment.outputs.value }}" != "prod_cron" ]]; then
            echo "Invalid Environment: ${{ steps.environment.outputs.value }}"
            exit 1
          fi
          echo "Environment: ${{ steps.environment.outputs.value }}"
    outputs:
      version: ${{ steps.version.outputs.value  }}
      environment: ${{ steps.environment.outputs.value  }}
      publish_url: https://stg.liza.zone

####
  rollout:
    name: Rollout
    needs: [prepare]
    runs-on: ubuntu-latest
    steps:
      - name: Check Stage
        if: needs.prepare.outputs.environment == 'staging'
        run: echo "staging"
      - name: Check Prod Standart
        if: needs.prepare.outputs.environment == 'production'
        run: echo "production wo cron"
      - name: Check Prod Cron
        if: needs.prepare.outputs.environment == 'prod_cron'
        run: echo "production Cron"
      - name: Check Cron
        if: needs.prepare.outputs.environment == 'cronjob'
        run: echo "cronjob"
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Kubernetes staging context
        uses: Azure/k8s-set-context@v2
        if: needs.prepare.outputs.environment == 'staging'
        with:
          method: service-account
          k8s-url: ${{ secrets.K8S_STAGE_ENDPOINT }}
          k8s-secret: ${{ secrets.K8S_STAGE_APP_ACCOUNT }}
      - name: Kubernetes cron context
        uses: Azure/k8s-set-context@v2
        if: needs.prepare.outputs.environment == 'cronjob'
        with:
          method: service-account
          k8s-url: ${{ secrets.K8S_STAGE_ENDPOINT }}
          k8s-secret: ${{ secrets.K8S_STAGE_CRON_ACCOUNT }}
      - name: Check workflow stage
        if: needs.prepare.outputs.environment == 'staging'
        run: |
              kubectl get pods
      - name: Check workflow cron
        if: needs.prepare.outputs.environment == 'cronjob'
        run: |
              kubectl get pods -n cronjobs
      - name: Check commit
        run: |
              echo "Commit message: ${{ github.event.head_commit.message }}"
              echo "Commit tag: ${{ github.event.release.tag_name }}"
